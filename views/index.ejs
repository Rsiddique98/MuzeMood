<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MuzeMood</title>
    <link rel="stylesheet" href="/styles.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
</head>
<body>
<!-- Homepage background-->
    <div class="animated-bg"></div> 

<!-- Navbar -->
 <%- include("header.ejs") %>    

<!-- Hero Section -->
<header class="hero">
    <div class="hero-content">
        <h1>Feel the Vibe, Hear the Sound.</h1>
        <p>Elevate your music taste with MuzeMood.</p>
        <a href="#" id="listen-now-btn" class="btn btn-gradient">Listen now</a>
    </div>
    <div class="hero-image">
        <img src="/images/headphonegirl.png" alt="Headphone Girl">
    </div>
</header>

<!-- Playlist Mood Selection Section -->
<section id="playlist-moods">
    <h2>How are you feeling today?</h2>

    <div class="mood-grid">
        <% Object.keys(playlistCovers).forEach(mood => { %>
            <div class="mood-item" onclick="loadPlaylist('<%= mood %>')">
                <img src="<%= playlistCovers[mood] %>" alt="<%= mood %> Playlist Cover">
                <h3><%= mood.charAt(0).toUpperCase() + mood.slice(1) %></h3>
            </div>
        <% }); %>
    </div>
</section>

 <!-- ðŸŽ§ Music Player Section (Initially Hidden) -->
 <section id="music-player-container" >
    <div id="playlist-content"></div>
</section>

<section id="connect" class="connect-section">
    <h2>Let's Connect <i class="fa-solid fa-music"></i> </h2>
    <p>Have a song in mind? Submit the URL, and we'll consider adding it to the playlist of your choice!</p>

    <form id="songRequestForm">
        <label for="name">Your Name:</label>
        <input type="text" id="name" name="name" required>

        <label for="songUrl">Song URL (YouTube):</label>
        <input type="url" id="songUrl" name="songUrl" required>

        <label for="message">Optional Message:</label>
        <textarea id="message" name="message" rows="3"></textarea>

        <button type="submit" class="btn-letsconnect" >Submit Request</button>
    </form>

    <p id="submissionStatus"></p>
</section>

<!-- ðŸŽ¼ JavaScript to Fetch Playlist Dynamically -->
<script>
    function loadPlaylist(mood) {
        const animatedBg = document.querySelector('.animated-bg');
        const listenNowBtn = document.querySelector('.btn-gradient'); 
        const submitRequestBtn = document.querySelector('.btn-letsconnect');

    // Define gradient backgrounds for each mood
    const moodGradients = {
        happy: "linear-gradient(45deg, #e74c3c, #f39c12, #c9b18a)",
        sad: "linear-gradient(45deg, #25919f, #44869c, #dce6e9)",
        chill: "linear-gradient(45deg, #3b937b, #3c8d89, #a0d6c0)",
        energetic: "linear-gradient(45deg, #5949b4, #8066c1, #e9e5ee)"
    };

     // Applies the new background dynamically
     if (moodGradients[mood]) {
        animatedBg.style.background = moodGradients[mood];
        animatedBg.style.backgroundSize = "400% 400%"; // Maintain animation effect
        listenNowBtn.style.background = moodGradients[mood]; // Update button background
        submitRequestBtn.style.background = moodGradients[mood];
    }

    fetch(`/playlist/${mood}`)
            .then(response => response.text())  // Fetch raw HTML
            .then(html => {
                document.getElementById("playlist-content").innerHTML = html;
                document.getElementById("music-player-container").style.display = "block";

                // âœ… Reinitialize Swiper after the playlist is loaded
                setTimeout(() => {
                    new Swiper('.swiper', {
                        slidesPerView: 1,
                        spaceBetween: 20,
                        loop: true,
                        centeredSlides: true, // Ensure the active slide is always centered
                        navigation: {
                            nextEl: '.swiper-button-next',
                            prevEl: '.swiper-button-prev',
                        },
                        pagination: {
                            el: '.swiper-pagination',
                            clickable: true,
                        },
                    });
                }, 500); // Delay to ensure the content is loaded
            })
            .catch(error => console.error("Error loading playlist:", error));
    }

     // âœ… Smooth scroll for "Listen Now", "Playlists", "Lets Connect" and Play icon button
     document.addEventListener("DOMContentLoaded", function () {
        const listenNowBtn = document.getElementById("listen-now-btn");
        const playlistsBtn = document.getElementById("playlists-btn");
        const letsConnectBtn = document.getElementById("letsconnect-btn");
        const playBtn = document.getElementById("play-btn");
        const moodHeading = document.getElementById("playlist-moods");
        const connectForm = document.getElementById("connect");

        function scrollToSection(event, targetSection) {
        event.preventDefault(); // Prevent default anchor behavior
        console.log("Scrolling to:", targetSection.id); // Debugging output
        targetSection.scrollIntoView({ behavior: "smooth" });
    }

 // Add event listeners if the elements exist
 if (listenNowBtn) {
        listenNowBtn.addEventListener("click", (event) => scrollToSection(event, moodHeading));
    }
    if (playlistsBtn) {
        playlistsBtn.addEventListener("click", (event) => scrollToSection(event, moodHeading));
    }
    if (letsConnectBtn) {
        letsConnectBtn.addEventListener("click", (event) => scrollToSection(event, connectForm));
    }
    if (playBtn) {
        playBtn.addEventListener("click", (event) => scrollToSection(event, moodHeading));
    }
});
       
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>
</body>
</html>